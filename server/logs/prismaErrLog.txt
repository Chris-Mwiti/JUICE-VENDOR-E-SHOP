230624	16:16:38	 1886b910-6ee4-4d0a-a3c2-5d60a3ffd999	undefined	
Invalid `prisma.user.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:11:44

   8 }
   9  async addUser(userInfo){
  10     try{
→ 11      const response = await prisma.user.create(
Can't reach database server at `localhost`:`3306`

Please make sure your database server is running at `localhost`:`3306`.
230624	16:23:03	 2bd2cd79-68ce-4c90-98b6-9e4e833f1ea2	undefined	
Invalid `prisma.user.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:11:44

   8 }
   9  async addUser(userInfo){
  10     try{
→ 11      const response = await prisma.user.create(
Can't reach database server at `localhost`:`3306`

Please make sure your database server is running at `localhost`:`3306`.

230624	16:24:55	 14ab1b22-19bb-4d72-bc98-c8ad951eb49a	undefined	
Invalid `prisma.user.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:11:44

   8 }
   9  async addUser(userInfo){
  10     try{
→ 11      const response = await prisma.user.create({
            data: {
              firstname: 'chris',
              ~~~~~~~~~
              lastname: 'mwiti',
              ~~~~~~~~
              email: 'cm@gmail.com',
              password: '$2b$10$RYSoql4WBkAoVKZOeLrBzOMoZ8I50O7.Sq/m98UCRtfPX9r53D7Zy',
          +   firstName: String,
          +   lastName: String,
          ?   createdAt?: DateTime,
          ?   updatedAt?: DateTime,
          ?   session?: {
          ?     create?: ShoppingSessionCreateWithoutUserInput | ShoppingSessionUncheckedCreateWithoutUserInput,
          ?     connectOrCreate?: ShoppingSessionCreateOrConnectWithoutUserInput,
          ?     connect?: ShoppingSessionWhereUniqueInput
          ?   },
          ?   order?: {
          ?     create?: OrderDetailsCreateWithoutUserInput | OrderDetailsUncheckedCreateWithoutUserInput,
          ?     connectOrCreate?: OrderDetailsCreateOrConnectWithoutUserInput,
          ?     connect?: OrderDetailsWhereUniqueInput
          ?   },
          ?   refreshToken?: {
          ?     create?: RefreshTokensCreateWithoutUserInput | RefreshTokensCreateWithoutUserInput | RefreshTokensUncheckedCreateWithoutUserInput | RefreshTokensUncheckedCreateWithoutUserInput,
          ?     connectOrCreate?: RefreshTokensCreateOrConnectWithoutUserInput | RefreshTokensCreateOrConnectWithoutUserInput,
          ?     createMany?: RefreshTokensCreateManyUserInputEnvelope,
          ?     connect?: RefreshTokensWhereUniqueInput | RefreshTokensWhereUniqueInput
          ?   }
            }
          })

Unknown arg `firstname` in data.firstname for type UserCreateInput. Did you mean `firstName`?
Unknown arg `lastname` in data.lastname for type UserCreateInput. Did you mean `lastName`?
Argument firstName for data.firstName is missing.
Argument lastName for data.lastName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:22:06	 82538f04-eb50-4d38-ba62-3b270241493a	500	
Invalid `prisma.product.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\products.js:16:51

  13 
  14 async addProduct(){
  15     try{
→ 16         const response = await prisma.product.create({
               data: {
                 productName: 'Strawberry',
                 price: 50,
                 productDescription: 'The juice is made out of pure strawberry fruit',
                 inventory: {
                   connect: {
                     productName: 'Strawberry'
                   }
                 },
                 discount: {
                   connect: {
                     coupon: 'QWERTZ'
                   }
                 },
                 asset: {
                   create: {
             +       image: String,
             ?       createdAt?: DateTime,
             ?       updatedAt?: DateTime
                   }
                 },
                 category: {
                   connect: {
                     categoryName: 'Strawberry'
                   }
                 }
               }
             })

Argument image for data.asset.create.image is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:34:06	 381efe89-cd47-4525-955d-283ef007f380	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:36:54	 05f1f2c2-667a-48ca-82ad-cb0f1041ef85	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:41:12	 ca0430ad-b6ae-4677-9874-7cd8672ed88c	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:41:37	 c6d153cc-1271-4b32-be15-fb9d37874523	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:43:23	 486a7f22-ea2c-4f61-bc66-dd9e946d28fa	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:43:46	 d6fe6d20-9dc5-4a59-acbb-5f48b6048ba4	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:51:19	 336bae71-26f1-4db7-b926-a3d5bfcd92e6	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230630	10:56:50	 abc3b9c2-b416-464e-90a6-bf7bfe60169d	500	
Invalid `prisma.inventory.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\inventory.js:12:53

   9 
  10 async addItem(){
  11     try{
→ 12         const response = await prisma.inventory.create({
               data: {
                 quantity: 40,
             +   productName: String,
             ?   createdAt?: DateTime,
             ?   updatedAt?: DateTime,
             ?   product?: {
             ?     create?: ProductCreateWithoutInventoryInput | ProductUncheckedCreateWithoutInventoryInput,
             ?     connectOrCreate?: ProductCreateOrConnectWithoutInventoryInput,
             ?     connect?: ProductWhereUniqueInput
             ?   }
               }
             })

Argument productName for data.productName is missing.

Note: Lines with + are required, lines with ? are optional.


230702	00:05:58	 841d8bb0-c9f7-4c9b-b79a-d22940cc9bd1	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230702	00:42:21	 e007e9a5-520a-4207-8745-2de6913f11cd	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230702	01:01:46	 ece0aee0-2f2b-4555-8bda-852176cbd95d	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230702	01:02:04	 6c908bfe-6bb6-43c6-ae28-23c909f6b921	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230702	01:07:28	 7394d6f1-d351-4947-b7e5-791538c24700	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230702	01:08:49	 8b348290-a43f-40c4-9e3c-7fb294d57ae7	500	
Invalid `prisma.user.findUnique()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\users.js:23:44

  20 async getUser(email){
  21     console.log('checking')
  22     try{
→ 23         const user = await prisma.user.findUnique({
               where: {
             ?   email?: String,
             ?   id?: Int
               }
             })

Argument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.


230704	08:35:08	 49d21c61-354c-4407-b1ea-88a2e837e33a	500	
Invalid `prisma.cartItems.create()` invocation in
G:\JS PROJECTS\WEBSITE PROJECTS\JUICE-VENDOR-E-SHOP\server\models\cartItems.js:13:53

  10 
  11 async addCartItem(){
  12     try{
→ 13         const response = await prisma.cartItems.create({
               data: {
                 productId: 1,
                 ~~~~~~~~~
                 quantity: 5,
                 sessionId: undefined,
             +   product: {
             +     create?: ProductCreateWithoutCartItemInput | ProductUncheckedCreateWithoutCartItemInput,
             +     connectOrCreate?: ProductCreateOrConnectWithoutCartItemInput,
             +     connect?: ProductWhereUniqueInput
             +   },
             +   session: {
             +     create?: ShoppingSessionCreateWithoutCartItemsInput | ShoppingSessionUncheckedCreateWithoutCartItemsInput,
             +     connectOrCreate?: ShoppingSessionCreateOrConnectWithoutCartItemsInput,
             +     connect?: ShoppingSessionWhereUniqueInput
             +   }
               },
               include: {
                 product: true,
                 session: true
               }
             })

Unknown arg `productId` in data.productId for type CartItemsCreateInput. Did you mean `product`?
Argument product for data.product is missing.
Argument session for data.session is missing.

Note: Lines with + are required


